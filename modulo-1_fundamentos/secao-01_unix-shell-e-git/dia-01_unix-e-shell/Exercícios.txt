----------------------------------------------------------------------------------------------------------------
 Exercícios 1
----------------------------------------------------------------------------------------------------------------

 Utilizando o terminal, aplique o comando de criação de diretórios que você aprendeu: crie um diretório chamado unix_tests e navegue até ele.

    mkdir unix_tests
    cd unix_tests

 Crie um arquivo de texto com o nome trybe.txt.

    touch trybe.txt

 Crie uma cópia do arquivo trybe.txt com o nome trybe_backup.txt.

    touch trybe.txt trybe_backup.txt

 Renomeie o arquivo trybe.txt.

    mv trybe.txt trybe_nome.txt

 Dentro de unix_tests, crie um novo diretório chamado backup.

    cd unix_tests
    mkdir backup

 Mova o arquivo trybe_backup.txt para o diretório backup.

    mv trybe_backup.txt /home/user/backup

 Dentro de unix_tests, crie um novo diretório chamado backup2.

    cd unix_tests
    mkdir backup2

 Mova o arquivo trybe_backup.txt da pasta backup para a pasta backup2.

    // Voltando para a pasta anterior
    cd ..
    mv backup/trybe_backup.txt backup2/trybe.txt

    // Sem voltar para a pasta anterior
    mv trybe_backup.txt ../backup2/trybe.txt

 Apague a pasta backup.

    rm -rf backup

 Renomeie a pasta backup2 para backup.

    mv backup2 backup

 Veja qual é o path completo do diretório atual e liste todos os arquivos dentro dele.

    pwd
    ls -lah

 Apague o diretório backup.

    rm -rf backup

 Limpe o terminal.

    clear

----------------------------------------------------------------------------------------------------------------
 Exercícios 2
----------------------------------------------------------------------------------------------------------------

 Crie um arquivo chamado skills.txt e cole o conteúdo abaixo dentro dele:

Internet
Unix
Bash
HTML
CSS
JavaScript
React
SQL

    cat > skills.txt

 Mostre na tela as 5 primeiras skills do arquivo skills.txt.

    head -5 skills.txt

 Mostre na tela as 4 últimas skills do arquivo skills.txt.

    tail -5 skills.txt

 Apague todos os arquivos que terminam em .txt.

    rm *.txt

----------------------------------------------------------------------------------------------------------------
 Exercícios 3
----------------------------------------------------------------------------------------------------------------

 Crie um novo diretório chamado unix_tests_search e navegue até ele.

    mkdir unix_tests_search
    cd unix_tests_search
    curl -o countries.txt "https://gist.githubusercontent.com/kalinchernev/486393efcca01623b18d/raw/daa24c9fea66afb7d68f8d69f0c4b8eeb9406e83/countries"

 Mostre todo o conteúdo do arquivo countries.txt na tela.

    cat countries.txt

 Mostre o conteúdo de countries.txt, página por página, até encontrar a Zambia.

    less countries.txt

 Mostre novamente o conteúdo de countries.txt página por página, mas agora utilize um comando para buscar por Zambia.

    less countries.txt
    /
    Zambia

 Busque por Brazil no countries.txt.

    grep Brazil countries.txt

 Busque novamente por brazil, mas agora utilize o lower case e não considere letras maiúsculas ou minúsculas.

    grep -i Brazil countries.txt

 Crie um novo arquivo chamado phrases.txt e adicione algumas frases à sua escolha. Não é necessário criar o arquivo pelo terminal.

    touch phrases.txt
 
 Busque pelas frases que não contenham a palavra fox.

    grep -iv fox phrases.txt

 Conte o número de palavras do arquivo phrases.txt.

    wc -w phrases.txt

 Conte o número de linhas do arquivo phrases.txt.

    wc -l phrases.txt

 Crie os arquivos empty.tbt e empty.pdf.

    touch empty.tbt empty.pdf

 Liste todos os arquivos do diretório unix_tests_search.

    ls

 Liste todos os arquivos que terminem com txt.

    ls *.txt

 Liste todos os arquivos que terminem com tbt ou txt.

    ls *.tbt *.txt

 Acesse o manual do comando ls.

    man ls

----------------------------------------------------------------------------------------------------------------
 Exercícios 4
----------------------------------------------------------------------------------------------------------------

 Crie a pasta unix_tests_skills e navegue até ela.

    mkdir unix_tests_skills

 Crie um arquivo de texto pelo terminal com o nome skills2.txt e adicione os valores Internet, Unix e Bash, cada um em sua linha.

    cat > skills2.txt
    Internet
    Unix
    Bash
    Ctrl + D

 Adicione mais 5 itens à sua lista de skills e, depois, imprima a lista ordenada no terminal.

    cat >> skills2.txt 
    Php
    Html
    CSS
    C++
    Javascript
    sort < skills2.txt

 Conte o número de linhas do arquivo skills2.txt.

    wc -l skills2.txt

 Crie um arquivo chamado top_skills.txt usando o skills2.txt. Ele deve conter as 3 primeiras skills em ordem alfabética.

    head -3 skills2.txt >> top_skills.txt

 Crie um novo arquivo chamado phrases2.txt pelo terminal e adicione algumas frases de sua escolha.

    cat > phrases2.txt
    nappa
    goku
    vegeta
    kkkkkkkk
    gohan

 Conte o número de linhas que contêm as letras br.

    grep -i br phrases2.txt | wc -l

 Conte o número de linhas que não contêm as letras br.

    grep -iv br phrases2.txt | wc -l

 Adicione dois nomes de países ao final do arquivo phrases2.txt.

    cat >> phrases2.txt
    Brazil
    Uruguay

 Crie um novo arquivo chamado bunch_of_things.txt com os conteúdos dos arquivos phrases2.txt e countries.txt.

    cat phrases2.txt countries.txt > bunch_of_things.txt

 Ordene o arquivo bunch_of_things.txt.

    sort bunch_of_things.txt -o bunch_of_things.txt

----------------------------------------------------------------------------------------------------------------
 Exercícios 5
----------------------------------------------------------------------------------------------------------------

 No sistema Linux, execute o comando sudo apt-get install fortune. Crie um arquivo de texto chamado fortune.txt que contenha a sua sorte do dia. Utilize apenas uma linha de comando.

    fortune > sorte.txt

 Conte o número de palavras que a frase da sua sorte do dia tem.

    wc -w sorte.txt

 Descubra os fatores primos usando o comando factor e, em seguida, o número 42.

    factor 42

 Veja como fica a sua sorte do dia ao contrário. Para isso, utilize o comando rev.

    rev sorte.txt